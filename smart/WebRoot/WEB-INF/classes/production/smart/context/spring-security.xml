<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.0.xsd">


	<http auto-config="true" access-denied-page="/errPage/403.jsp">
			<intercept-url pattern="/login.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY" method="GET"/>
			<intercept-url pattern="/timeout.do" access="IS_AUTHENTICATED_ANONYMOUSLY" method="GET"/>
		    <intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		    <intercept-url pattern="/druid/*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		    <intercept-url pattern="/jquery/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		    <intercept-url pattern="/img/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		    <intercept-url pattern="/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<intercept-url pattern="/image/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<intercept-url pattern="/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			
	   <intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN" /> 
	
		<form-login login-page="/login.jsp" 
		authentication-failure-url="/login.jsp?err=true" 
		authentication-success-handler-ref="successHandler"
		authentication-failure-handler-ref="failureHandler"
		default-target-url="/home.do"/>
		
		<logout logout-success-url="/login.jsp" />
		<http-basic />

  	<session-management invalid-session-url="/login.jsp" session-fixation-protection="none">
  		<concurrency-control max-sessions="10" error-if-maximum-exceeded="true"/>
  	</session-management>

  	 <custom-filter before="FILTER_SECURITY_INTERCEPTOR"
             ref="myFilter" />
        
	</http>
	
	  <!-- 登录成功业务处理 -->
  <beans:bean id="successHandler" class="com.zk.spring.poj.security.LoginAuthenticationSuccesssHandler">
  	<beans:property name="defaultUrl" value="/home.do"></beans:property>  <!-- 可变换登录成功后的路径，验证用户是否拥有该权限 -->
  </beans:bean>
	
	
   <!-- 登录失败业务处理 -->
  <beans:bean id="failureHandler" class="com.zk.spring.poj.security.LoginAuthenticationFailureHandler">
   	<beans:property name="defaultUrl" value="/login.jsp"></beans:property> 
  </beans:bean>
	
	
		 <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <beans:bean id="myAccessDecisionManagerBean"  class="com.zk.spring.poj.security.CareyAccessDecisionManager">
     </beans:bean>
     
     <!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
     <beans:bean id="securityMetadataSource"
         class="com.zk.spring.poj.security.CareyInvocationSecurityMetadataSource" />
 
 	
		
		<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
     我们的所有控制将在这三个类中实现，解释详见具体配置 -->
     
	<beans:bean id="myFilter" class="com.zk.spring.poj.security.CareyFilterSecurityInterceptor">
         <beans:property name="authenticationManager"
             ref="authenticationManager" />
         <beans:property name="accessDecisionManager"
             ref="myAccessDecisionManagerBean" />
         <beans:property name="securityMetadataSource"
             ref="securityMetadataSource" />
     </beans:bean>
		
		    <!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
     <authentication-manager alias="authenticationManager">
         <authentication-provider
             user-service-ref="customUserDetailsService">
             <!--   如果用户的密码采用加密的话，可以加点“盐”
                 <password-encoder hash="md5" />
             -->
         </authentication-provider>
     </authentication-manager>
		
	<beans:bean id="customUserDetailsService" class="com.zk.spring.poj.web.CustomUserDetailsService"></beans:bean>
</beans:beans>
